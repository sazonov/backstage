plugins {
	id "java-library"
	id "io.freefair.lombok" version "$lombokVersion"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'proit-jpa-weaving'
apply plugin: 'proit-jpa-modelgen'

delombok {
	enabled = false
}

jar {
	enabled = true
}

bootJar {
	enabled = false
}

dependencies {
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	api project(":api")
	api project(":jobs")
	api project(":quartz")
	api project(":attachments")

	api "org.drools:drools-core:$jbpmVersion"
	api "org.kie:kie-api:$jbpmVersion"
	api "org.jbpm:jbpm-flow:$jbpmVersion"
	api "org.jbpm:jbpm-bpmn2:$jbpmVersion"
	api "org.jbpm:jbpm-persistence-jpa:$jbpmVersion"

	api "org.openjdk.nashorn:nashorn-core:$nashornVersion"
	api "org.codehaus.groovy:groovy:$groovyVersion"
	api "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"
	api "org.jetbrains.kotlin:kotlin-script-util:$kotlinVersion"

	testImplementation "org.springframework.boot:spring-boot-starter-test"

	testImplementation "com.fasterxml.jackson.core:jackson-core"
	testImplementation "com.fasterxml.jackson.core:jackson-databind"
	testImplementation "com.fasterxml.jackson.core:jackson-annotations"

	testImplementation "com.zaxxer:HikariCP"

	testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
	testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
	testImplementation "org.testcontainers:postgresql:$testContainersVersion"
}

test {
	useJUnitPlatform()
}

javadoc {
	if (JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
		options.encoding('UTF-8')
	}
}

tasks.register('sourceJar', Jar) {
	archiveClassifier = 'sources'
	from sourceSets.main.allJava
}

tasks.register('javadocJar', Jar) {
	archiveClassifier = 'javadoc'
	from javadoc
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = project.group
			artifactId = project.name
			version = project.version

			from components.java
			artifact sourceJar
			artifact javadocJar
		}
	}

	repositories {
		maven {
			url 'https://nexus.proitr.ru/repository/maven-proit/'
			credentials {
				username nexusLogin
				password nexusPassword
			}
		}
	}
}